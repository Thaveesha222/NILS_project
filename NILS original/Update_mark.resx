<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>